


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public static ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode next  = null;
        int jinzhi = 0;
        int sum = l1.val+l2.val;
        if(sum >= 10){
            next = new ListNode(sum-10);
            jinzhi = 1;
        }else {
            next = new ListNode(sum);
            jinzhi = 0;
        }
        l1=l1.next;
        l2=l2.next;
        ListNode head = new ListNode(0,next);
        while ((l1 != null || l2 != null)|| jinzhi != 0 ){
            sum = 0;
            if(l1 != null){
                sum+=l1.val;
                l1 =l1.next;
            }
            if(l2 != null){
                sum+=l2.val;
                l2 =l2.next;
            }
            sum+=jinzhi;
            if(sum >= 10){
                next.next = new ListNode(sum-10);
                jinzhi = 1;
            }else {
                next.next = new ListNode(sum);
                jinzhi = 0;
            }
            next = next.next;
        }
        return head.next;
    }

}

//runtime:1 ms
//memory:41.9 MB
